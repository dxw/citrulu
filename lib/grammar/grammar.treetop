grammar TesterGrammar

  rule test_file
    space test_group+ space {
      def process
        elements[1].elements.collect{|e| e.process}
      end
    }
  end

  rule test_group
    on_clause test+  {
      def process
        {
          :test_url => on_clause.url.text_value.strip, 
          :tests => elements[1].elements.collect{|e| e.process}
        }
      end
    }
  end

  rule on_clause
    "On " url newline 
  end

  rule test
    space assertion ' ' (name / value) newline {
      def process
        hash = {
          :assertion => assertion.text_value.to_test_sym,
        }

        if elements[3].text_value.match(/^=/)
          hash[:name] = elements[3].text_value.strip
        else
          hash[:value] = elements[3].text_value.strip
        end

        hash
      end
    }
  end
 
  rule assertion
    "Source should contain" / "Source should not contain" / 
    "I should see" / "I should not see" / 
    "Headers should include" / "Headers should not include"
  end

  rule newline
    [\r\n]+ 
  end
  
  rule value
    [^\n]+    
  end

  rule name
    '=' [a-zA-Z0-9 _-]*
  end

  rule url
    ('http://' / 'https://') [^\n]+
  end

  rule space
    [\s\t]*  
  end
end

