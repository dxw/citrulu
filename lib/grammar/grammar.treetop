grammar TesterGrammar
  rule test_file
     test_group+ <TestFile>
  end

  rule test_group
    page_clause single_assertion test_line* space <TestGroup>
  end

  rule page_clause
    comment so_clause? (on_clause / when_clause)  <PageClause>
  end

  rule so_clause
    space "So I know that " required_value <SoClause>
  end

  rule on_clause
    comment space "On" space url <OnClause>
  end

  rule when_clause
    comment space "When I" (method_data / method) space url <WhenClause>
  end

  rule method_data
    space ("put" / "post") space quoted_value space "to" <MethodData>
  end

  rule method
    space ("head" / "get" / "delete") <Method>
  end

  rule single_assertion
    first_clause? finally_clause? <SingleAssertion>
  end

  rule first_clause
    comment space "First, fetch " url <FirstClause>
  end

  rule finally_clause
    comment space "Finally, fetch " url <FinallyClause>
  end

  rule test_line 
    test comment <TestLine>
  end
 
  rule test 
    comment space (complex_assertion / simple_assertion) <Test>
  end

  rule simple_assertion 
    ("Source should contain" / "Source should not contain" / "I should see" / "I should not see" / "Headers should include" / "Headers should not include" ) space parameter <SimpleAssertion>
  end

  rule complex_assertion
    ( header_contents / response_code ) <ComplexAssertion>
  end

  rule response_code 
    ("Response code should be" / "Response code should not be") space (quoted_value / regex / name / http_code) space ('after redirect' 's'?)? <ResponseCode>
  end

  rule header_contents 
    "Header " identifier space ("should contain" / "should not contain") space parameter <HeaderContents>
  end

  rule parameter
    ( escaped_value / quoted_value / name / regex / required_value ) <Param>
  end

  rule value
    [^:]* [^\n]* <Value>
  end

  rule required_value
    [^\s]+ [^\n]* <RequiredValue>
  end

  rule quoted_value
    '"' ('\"' / [^"] )+ '"' <QuotedValue>
  end

  rule http_code 
    [0-9]+  <HttpCode>
  end

  rule regex
    '/' ('\/' / [^/] )+ '/' <Regex>
  end

  rule comment
    (space '#' [^\n]*)* <Comment>
  end

  rule escaped_value
    '::' [^\n]* <EscapedValue>
  end

  rule name
    ':' identifier <Name>
  end

  rule identifier
    [a-zA-Z0-9_-]+ <Identifier>
  end

  rule url
    ('http://' / 'https://') [a-zA-Z0-9]+ [^\n\s]+ <Url>
  end

  rule space
    [\s\t]* <Space>
  end
end

